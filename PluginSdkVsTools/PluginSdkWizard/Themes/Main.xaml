<ResourceDictionary
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vsshell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.14.0"
        xmlns:vsui="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.14.0">
    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Static vsshell:VsResourceKeys.ThemedDialogButtonStyleKey}}"/>
    <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource {x:Static vsshell:VsResourceKeys.ThemedDialogCheckBoxStyleKey}}"/>
    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Static vsshell:VsResourceKeys.ThemedDialogComboBoxStyleKey}}"/>
    <Style TargetType="{x:Type GridViewColumnHeader}" BasedOn="{StaticResource {x:Static vsshell:VsResourceKeys.ThemedDialogGridViewColumnHeaderStyleKey}}"/>
    <Style TargetType="{x:Type Hyperlink}" BasedOn="{StaticResource {x:Static vsshell:VsResourceKeys.ThemedDialogHyperlinkStyleKey}}"/>
    <Style TargetType="{x:Type ListBox}" BasedOn="{StaticResource {x:Static vsshell:VsResourceKeys.ThemedDialogListBoxStyleKey}}"/>
    <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource {x:Static vsshell:VsResourceKeys.ThemedDialogListViewItemStyleKey}}"/>
    <Style TargetType="{x:Type ListView}" BasedOn="{StaticResource {x:Static vsshell:VsResourceKeys.ThemedDialogListViewStyleKey}}"/>
    <Style TargetType="{x:Type RadioButton}" BasedOn="{StaticResource {x:Static vsshell:VsResourceKeys.ThemedDialogRadioButtonStyleKey}}"/>
    <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource {x:Static vsshell:VsResourceKeys.ScrollBarStyleKey}}"/>
    <Style TargetType="{x:Type TreeView}" BasedOn="{StaticResource {x:Static vsshell:VsResourceKeys.ThemedDialogTreeViewStyleKey}}"/>
    <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource {x:Static vsshell:VsResourceKeys.ThemedDialogTreeViewItemStyleKey}}"/>
    <Style TargetType="{x:Type Label}" BasedOn="{StaticResource {x:Static vsshell:VsResourceKeys.ThemedDialogLabelStyleKey}}"/>
    <Style TargetType="{x:Type CheckBox}" x:Key="Game">
        <Setter Property="Margin" Value="4,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>
                        <Border x:Name="Border" Background="Transparent" CornerRadius="0"/>
                        <Rectangle x:Name="background" Fill="{TemplateBinding Background}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#0078d7"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type TabControl}">
        <Setter Property="TabControl.TabStripPlacement" Value="Top"/>
        <Setter Property="Control.BorderThickness" Value="0"/>
        <Setter Property="Control.Background" Value="Transparent"/>
    </Style>
    <Style x:Key="ThemedDialogStyle" TargetType="{x:Type vsui:DialogWindow}">
        <Setter Property="Control.Background" Value="{DynamicResource {x:Static vsui:ThemedDialogColors.WindowPanelBrushKey}}"/>
        <Setter Property="Control.BorderBrush" Value="{DynamicResource {x:Static vsui:ThemedDialogColors.WindowBorderBrushKey}}"/>
    </Style>
    <Style x:Key="FooterStyle" TargetType="{x:Type Grid}">
        <Setter Property="Panel.Background" Value="{DynamicResource {x:Static vsui:ThemedDialogColors.WizardFooterBrushKey}}"/>
    </Style>
    <Style x:Key="BaseButtonStyle" TargetType="{x:Type Button}"
         BasedOn="{StaticResource {x:Static vsshell:VsResourceKeys.ThemedDialogButtonStyleKey}}">
        <Setter Property="FrameworkElement.Height" Value="23"/>
        <Setter Property="FrameworkElement.MinWidth" Value="75"/>
        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Left"/>
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Bottom"/>
    </Style>
    <Style x:Key="ActionButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="FrameworkElement.Margin" Value="6,0,0,0"/>
    </Style>
    <Style x:Key="SmallButtonStyle" TargetType="{x:Type Button}"
         BasedOn="{StaticResource ActionButtonStyle}">
        <Setter Property="Control.Padding" Value="0"/>
    </Style>
    <Style x:Key="SmallBrowseButtonStyle" TargetType="{x:Type Button}"
         BasedOn="{StaticResource SmallButtonStyle}">
        <Setter Property="FrameworkElement.MinWidth" Value="25"/>
        <Setter Property="FrameworkElement.Width" Value="25"/>
        <Setter Property="ContentControl.Content" Value="..."/>
    </Style>
    <Style x:Key="SmallIconButtonStyle" TargetType="{x:Type Button}"
         BasedOn="{StaticResource SmallButtonStyle}">
        <Setter Property="FrameworkElement.MinWidth" Value="23"/>
        <Setter Property="FrameworkElement.Width" Value="23"/>
        <Setter Property="FrameworkElement.Height" Value="23"/>
        <Style.Resources>
            <Style TargetType="Image">
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Visibility" Value="Hidden" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
    </Style>
    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Static vsshell:VsResourceKeys.TextBoxStyleKey}}">
        <Setter Property="TextBox.TextWrapping" Value="NoWrap"/>
        <Setter Property="FrameworkElement.Height" Value="23"/>
        <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    </Style>
    <Style TargetType="{x:Type TextBox}" x:Key="TextBoxMultiLine" BasedOn="{StaticResource {x:Static vsshell:VsResourceKeys.TextBoxStyleKey}}">
        <Setter Property="TextBox.TextWrapping" Value="Wrap"/>
        <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    </Style>
    <Style x:Key="TextBoxImage" TargetType="{x:Type Image}">
        <Setter Property="FrameworkElement.Width" Value="20"/>
        <Setter Property="FrameworkElement.Height" Value="20"/>
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Top"/>
        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Right"/>
        <Setter Property="FrameworkElement.Margin" Value="0,1,5,0"/>
        <Setter Property="Stretch" Value="Fill"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="FrameworkElement.Width" Value="0"/>
                <Setter Property="FrameworkElement.Height" Value="0"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="SmallIcon" TargetType="Image">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.25"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>